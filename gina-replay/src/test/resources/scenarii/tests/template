package org.openflexo.replay.tests;

import static org.junit.Assert.*;

import java.io.File;
import java.util.Collection;
import java.util.LinkedList;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;
import org.openflexo.gina.event.InvalidRecorderStateException;
import org.openflexo.replay.test.ReplayTestConfiguration;
import org.openflexo.replay.test.TestParameter;
import org.openflexo.rm.FileResourceImpl;
import org.openflexo.rm.ResourceLocator;

@RunWith(Parameterized.class)
public class %%CLASS_NAME%% {
	static private ReplayTestConfiguration testConfiguration;
	
	public static void init() {
		testConfiguration = new ReplayTestConfiguration();
		File scenarioDir = ((FileResourceImpl) ResourceLocator.locateResource("%%RESOURCE_SCENARIO%%")).getFile();
		testConfiguration.loadScenario(scenarioDir);
		testConfiguration.runMain();
	}

	@Parameters( name = "{index}: Node {0}" )
    public static Collection<TestParameter[]> data() {
    	init();
    	LinkedList<TestParameter[]> list = new LinkedList<TestParameter[]>();

		int size = testConfiguration.getManager().getCurrentReplayer().getScenario().size();

        for(int i=0; i<size; ++i)
        {
        	TestParameter[] param = {new TestParameter(i, testConfiguration.getManager().getCurrentReplayer().
        			getScenario().getNodes().get(i))};
        	list.add(param);
        }

    	return list;
    }

    public %%CLASS_NAME%%(TestParameter param) {
    }

    @Test
    public void test() {
    	try {
    		testConfiguration.getManager().getCurrentReplayer().checkNextStep(false);
		} catch (InvalidRecorderStateException e) {
			assertTrue(e.getMessage(), false);
		}

    	assertTrue(true);
    }
}
